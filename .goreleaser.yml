---
before:
  hooks:
    - go mod tidy
    - ./scripts/completions.sh
builds:
  - id: yot
    env:
      - CGO_ENABLED=0
    goos:
      - linux
      - windows
      - darwin
    main: ./cmd/yot
    binary: yot
    ldflags:
      - -s -w -X github.com/vmware-tanzu-labs/yaml-overlay-tool/internal/commands.version={{.Version}} -extldflags '-static'

signs:
  - artifacts: checksum
    args:
      - "--batch"
      - "-u"
      - "{{ .Env.GPG_FINGERPRINT }}"
      - "--output"
      - "${signature}"
      - "--detach-sign"
      - "${artifact}"

archives:
  - replacements:
      darwin: Darwin
      linux: Linux
      windows: Windows
      386: i386
      amd64: x86_64
    name_template: "yot_v{{ .Version }}_{{ .Os }}_{{ .Arch }}"
    format_overrides:
      - goos: windows
        format: zip
    files:
      - README.md
      - LICENSE
      - completions/*
checksum:
  name_template: 'checksums.txt'
snapshot:
  name_template: "{{ .Version }}-snapshot-{{.ShortCommit}}"
changelog:
  sort: asc
  filters:
    exclude:
      - '^docs(\(.*\))?:'
      - '^test(\(.*\))?:'
      - '^ci(\(.*\))?:'
      - '^chore(\(.*\))?:'
      - '^build(\(.*\))?:'
project_name: yot
dockers:
  - image_templates:
      - 'ghcr.io/vmware-tanzu-labs/yot:v{{ .Version }}'
      - 'ghcr.io/vmware-tanzu-labs/yot:latest'
    dockerfile: Dockerfile
    use_buildx: true
    build_flag_templates:
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.name={{.ProjectName}}"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version={{.Version}}"
      - "--label=org.opencontainers.image.source={{.GitURL}}"
      - "--label=org.opencontainers.image.licenses=MIT"
      - "--label=VERSION={{.Version}}"
      - "--platform=linux/amd64"
brews:
  - name: yot

    tap:
      owner: vmware-tanzu-labs
      name: homebrew-tap
      token: "{{ .Env.HOMEBREW_TAP_GITHUB_TOKEN }}"

    # Git author used to commit to the repository.
    # Defaults are shown.
    commit_author:
      name: goreleaserbot
      email: goreleaser@vmware-tanzu-labs.com

    # Folder inside the repository to put the formula.
    # Default is the root folder.
    folder: Formula

    # Your app's homepage.
    # Default is empty.
    homepage: "https://github.com/vmware-tanzu-labs/yaml-overlay-tool"

    # Template of your app's description.
    # Default is empty.
    description: "A YAML Overlay Tool with templating tendencies."

    # SPDX identifier of your app's license.
    # Default is empty.
    license: "MIT"

    # Setting this will prevent goreleaser to actually try to commit the updated
    # formula - instead, the formula file will be stored on the dist folder only,
    # leaving the responsibility of publishing it to the user.
    # If set to auto, the release will not be uploaded to the homebrew tap
    # in case there is an indicator for prerelease in the tag e.g. v1.0.0-rc1
    # Default is false.
    skip_upload: auto

    # Packages your package depends on.
    dependencies:
      - name: kubectl
        type: optional

    install: |-
      bin.install "yot"
      bash_completion.install "completions/yot.bash" => "yot"
      zsh_completion.install "completions/yot.zsh" => "_yot"
      fish_completion.install "completions/yot.fish"

    # So you can `brew test` your formula.
    # Default is empty.
    test: |
      system "#{bin}/yot --version"
nfpms:
  - file_name_template: '{{ .ProjectName }}_{{ .Arch }}{{ if .Arm }}v{{ .Arm }}{{ end }}'
    homepage:  https://github.com/vmware-tanzu-labs/yaml-overlay-tool.com
    description: "A YAML Overlay Tool with templating tendencies."
    maintainer: Jeff Davis <jeffda@vmware.com>, Andrew Huffman <ahuffman@vmware.com>
    license: MIT
    vendor: VMware Tanzu Labs
    contents:
      - src: ./completions/yot.bash
        dst: /etc/bash_completion.d/yot
      - src: ./completions/yot.fish
        dst: /usr/share/fish/completions/yot.fish
      - src: ./completions/yot.zsh
        dst: /usr/local/share/zsh/site-functions/_yot
    formats:
      - apk
      - deb
      - rpm
    recommends:
      - kubectl
snapcrafts:
  - name_template: '{{ .ProjectName }}_{{ .Arch }}{{ if .Arm }}v{{ .Arm }}{{ end }}'
    name: yaml-overlay-tool
    summary: "A YAML Overlay Tool with templating tendencies."
    description: |
      YAML Overlay Tool, or Yot for short, often pronounced /yaucht/, is a tool 
      to assist with patching YAML files. Yot uses JSONPath to query YAML documents
      within YAML files, and to perform a change. YAML Overlay Tool operates on YAML 
      nodes. It is able to preserve and inject head, foot, and line comments into the 
      new output versions of the files that you manipulate.
    grade: stable
    confinement: strict
    publish: true